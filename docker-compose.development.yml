version: "3.8"
services:
  api:
    container_name: api
    build: 
      context: ./src/Api
      dockerfile: Dockerfile.Development
    depends_on:
      - db
    restart: unless-stopped
    volumes: 
      - ./src:/app
  db:
    container_name: db
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    # volumes:
    #   - ./postgres-data:/var/lib/postgresql/data
  client:
    container_name: client
    build: 
      context: ./client
      dockerfile: Dockerfile.Development
    volumes: 
      - ./client:/app
    depends_on:
      - api
    restart: unless-stopped
    stdin_open: true
  client-admin:
    container_name: client-admin
    build: 
      context: ./client-admin
      dockerfile: Dockerfile.Development
    volumes: 
      - ./client-admin:/app
    depends_on:
      - api
    restart: unless-stopped
    stdin_open: true
  nginx:
    image: nginx:stable-alpine
    container_name: monumentsmap-docker-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes: 
      - ./nginx/nginx.conf.dev:/etc/nginx/conf.d/nginx.conf
    depends_on: 
      - api
      - client
      - client-admin
  rebbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports: 
      - 15672:15672
  mail_service:
    container_name: mail_service
    build: 
      context: ./src/MailService
      dockerfile: Dockerfile.Development
    restart: unless-stopped
    volumes: 
      - ./src:/app
  identity_service:
    container_name: identity_service
    build: 
      context: ./src/IdentityService
      dockerfile: Dockerfile.Development
    restart: unless-stopped
    volumes: 
      - ./src:/app
